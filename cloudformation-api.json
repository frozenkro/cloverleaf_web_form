{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "API endpoints and lambda functions for cloverleaf web form's airtable integration",
    "Resources": {
        "ClwfApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "ClwfApi",
                "Description": "Exposes methods to interact with cloverleaf airtable",
                "EndpointConfiguration": {
                    "Types": ["REGIONAL"]
                }
            }
        },
        "FileResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "ClwfApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "file",
                "RestApiId": {
                    "Ref": "ClwfApi"
                }
            }
        },
        "FileFeedbackResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "ClwfApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "file-feedback",
                "RestApiId": {
                    "Ref": "ClwfApi"
                }
            }
        },
        "GetFileMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "RestApiId": {
                    "Ref": "ClwfApi"
                },
                "ResourceId": {
                    "Ref": "FileResource" 
                },
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFileFunction.Arn}/invocations"
                    },
                    "RequestTemplates": {
                        "application/json": "{ \"id\": \"$input.params('id')\" }"
                    },
                    "IntegrationResponses": [{
                        "StatusCode": "200",
                        "ResponseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        },
                        "ResponseTemplates": {
                          "application/json": ""
                        }
                     }]
                },
                "MethodResponses": [{
                    "StatusCode": "200",
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                        "method.response.header.Access-Control-Allow-Origin": true
                    }
                }],
                "RequestParameters": {
                    "method.request.querystring.id": true
                }
            }
        },
        "PostFileFeedbackMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "RestApiId": {
                    "Ref": "ClwfApi"
                },
                "ResourceId": {
                    "Ref": "FileFeedbackResource" 
                },
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostFileFeedbackFunction.Arn}/invocations"
                    },
                    "RequestTemplates": {
                        "application/json": "$input.body"
                    },
                    "IntegrationResponses": [{
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                            "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                            "method.response.header.Access-Control-Allow-Origin": "'*'"
                        },
                        "ResponseTemplates": {
                          "application/json": ""
                        }
                    }]

                },
                "MethodResponses": [{
                    "StatusCode": "200",
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                        "method.response.header.Access-Control-Allow-Origin": true
                    }
                }]
            }
        },
        "OptionsFileMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": { "Ref": "FileResource" },
                "RestApiId": { "Ref": "ClwfApi" },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [{
                        "StatusCode": "200",
                        "ResponseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        },
                        "ResponseTemplates": {
                          "application/json": ""
                        }
                     }]
                },
                "MethodResponses": [{
                    "StatusCode": "200",
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                        "method.response.header.Access-Control-Allow-Origin": true
                    }
                }]
            }
        },
        "OptionsFileFeedbackMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": { "Ref": "FileFeedbackResource" },
                "RestApiId": { "Ref": "ClwfApi" },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [{
                        "StatusCode": "200",
                        "ResponseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        },
                        "ResponseTemplates": {
                          "application/json": ""
                        }
                     }]
                },
                "MethodResponses": [{
                    "StatusCode": "200",
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                        "method.response.header.Access-Control-Allow-Origin": true
                    }
                }]
            }
        },
        "ApiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                  "Ref": "ClwfApi" 
            },
            "StageName": "prod" 
          },
          "DependsOn": ["GetFileMethod", "PostFileFeedbackMethod", "OptionsFileMethod", "OptionsFileFeedbackMethod"] 
        },
        "PyairtableLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "CompatibleRuntimes":[ "python3.8" ],
                "Description": "python client for airtable API",
                "LayerName": "pyairtable",
                "Content": {
                    "S3Bucket": "<LAMBDA_LAYER_BUCKET>",
                    "S3Key": "<LAYER_FILE_NAME>"
                }
            }
        },
        "GetFileFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Retrieves file name, link, and deadline from airtable",
                "FunctionName": "GetFileFromAirtable",
                "Handler": "getfilefromairtable.lambda_handler",
                "Runtime": "python3.8",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Layers": [ "Ref": "PyairtableLayer" ],
                "Code": {
                    "S3Bucket": "<FUNC_BUCKET_NAME>",
                    "S3Key": "<GETFILE_FILE_NAME>.zip"
                },
                "Environment": {
                    "Variables": {
                        "apiKey": "<AT_API_KEY>",
                        "baseID": "appiGabrJNHWkBExv",
                        "tableName": "FILES"
                    }
                }
            }
        },
        "PostFileFeedbackFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Publishes client feedback on file to airtable",
                "FunctionName": "PostFileFeedbackToAirtable",
                "Handler": "postfilefeedbacktoairtable.lambda_handler",
                "Runtime": "python3.8",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Layers": [ "Ref": "PyairtableLayer" ],
                "Code": {
                    "S3Bucket": "<FUNC_BUCKET_NAME>",
                    "S3Key": "<FILEFEEDBACK_FILE_NAME>.zip"
                },
                "Environment": {
                    "Variables": {
                        "apiKey": "<AT_API_KEY>",
                        "baseID": "appiGabrJNHWkBExv",
                        "tableName": "FILES"
                    }
                }
            }
        },
        "GetFileInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "GetFileFunction" 
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ClwfApi}/*/*/*"
                }
            }
        },
        "PostFileFeedbackInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostFileFeedbackFunction" 
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ClwfApi}/*/*/*"
                }
            }
        },

        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "lambda.amazonaws.com"
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                },
                "Policies": [{
                    "PolicyName": "root",
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                          ],
                          "Resource": "arn:aws:logs:*:*:*"
                        }
                      ]
                    }
                }]
            }
        }
    },

    "Outputs": {
        "ApiEndpoint": {
            "Description": "API Gateway URL",
            "Value": {
                "Fn::Sub": "https://${ClwfApi}.execute-api.${AWS::Region}.amazonaws.com/"
            }
        }
    }
}